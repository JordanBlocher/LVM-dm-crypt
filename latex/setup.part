do
    echo "CREATING PARTITIONS FOR VOLUME GROUP $j"
    END=$(($j * $NUMBLOCKS))
    while [ $i -lt $END ]
    do
        START=$(parted /dev/$BASE unit MB print free | grep 'Free' | tail -n1 | awk '{print $1}')
        START=${START%"MB"}
        END=$(echo 12+$START | bc)
        parted -a optimal /dev/$BASE mkpart primary $START $END
        parted /dev/$BASE set $(($i+2)) LVM on
        echo dd if=/dev/random bs=512 count=1 > /mnt/crypt/key$i
        echo "KEY$i"
        cat /mnt/crypt/key$i
        cryptsetup plainOpen --allow-discards --key-file /mnt/crypt/key$i /dev/$BASE$(($i+2)) encpt$i
        echo "Mapping /dev/$BASE$(($i+2)) /dev/mapper/encpt$i"
        PTS=$PTS" /dev/mapper/encpt$i"
        UUID=$(echo blkid -s UUID -o value /dev/$BASE$((($i+2))))
        HASH="$(./Hash 32 $UUID)"
        IDX=$(echo $HASH%$MAXTABLESIZE | bc)
        PTHASHES[$i]=$CURKEY
        i=$(($i+1))
        END=$(($j * $NUMBLOCKS))
        mount -a
    done
    pvcreate $PTS
    echo "CREATING ENCRYPTED VOLUME GROUP $j from $PTS"
    vgcreate encvg$j $PTS
    VUUID=$(vgs encvg$j -o vg_uuid --noheadings --nosuffix)
    PTS=""
    SIZE=$(vgs encvg$j -o vg_size --noheadings)
    lvcreate -l 100%FREE -nenclv$j encvg$j
    mkfs.$FILE /dev/mapper/encvg$j-enclv$j
    j=$(($j+1))
done


